{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactsList/ContactList.module.css","components/App/App.module.css","components/container/Container.module.css","service/phoneContacts-api.js","redux/Phonebook/phone-operations.js","redux/Phonebook/phone-actions.js","redux/Phonebook/phone-selectors.js","redux/Phonebook/phone-reducers.js","redux/store.js","components/container/Container.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactsList/ContactList.jsx","components/App/App.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","fetchContacts","a","axios","get","data","addContact","contact","post","deleteContact","id","delete","defaults","baseURL","createAsyncThunk","_","rejectWithValue","contactsApi","contacts","message","createAction","changeFilter","getContacts","state","Phonebook","entities","getFilter","filter","getLoading","isLoading","getError","error","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","name","includes","createReducer","fulfilled","payload","pending","rejected","_state","contactsActions","combineReducers","store","configureStore","reducer","contactReducer","devTools","process","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","logger","Container","children","className","s","container","Form","dispatch","useDispatch","useState","setName","number","setNumber","handleInputChange","e","target","value","form","onSubmit","preventDefault","contactsOperations","contactFormLabel","onChange","inputContactForm","type","pattern","title","required","btnContactForm","btnText","Filter","useSelector","contactsSelectors","textFilter","inputFilter","ContactsList","useEffect","map","item","button","onClick","App","titlePhone","contactTitle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fa9ca217.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"textFilter\":\"Filter_textFilter__36LwR\",\"inputFilter\":\"Filter_inputFilter__3_EeN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactList_item__1MOFM\",\"buttonDelete\":\"ContactList_buttonDelete__1lF3R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"titlePhone\":\"App_titlePhone__2TmHM\",\"contactTitle\":\"App_contactTitle__2bMdn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3vc7M\"};","import axios from \"axios\";\r\n// дефолтний URL\r\naxios.defaults.baseURL = \"https://61962ffbaf46280017e7debe.mockapi.io\";\r\n// Запрос\r\nexport async function fetchContacts() {\r\n  const { data } = await axios.get(\"/phonebook-contacts\");\r\n  return data;\r\n}\r\n// Добавление\r\nexport async function addContact(contact) {\r\n  const { data } = await axios.post(\"/phonebook-contacts\", contact);\r\n  return data;\r\n}\r\n// Удаление по Id\r\nexport async function deleteContact(id) {\r\n  await axios.delete(`/phonebook-contacts/${id}`);\r\n  return id;\r\n}\r\n","import { createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport * as contactsApi from \"../../service/phoneContacts-api\";\r\n\r\nexport const fetchContacts = createAsyncThunk(\r\n  \"contacts/fetchContacts\",\r\n  async (_, { rejectWithValue }) => {\r\n    try {\r\n      const contacts = await contactsApi.fetchContacts();\r\n      return contacts;\r\n    } catch (error) {\r\n      return rejectWithValue(error);\r\n    }\r\n  }\r\n);\r\n\r\nexport const addContact = createAsyncThunk(\r\n  \"contacts/addContact\",\r\n  async (contact, { rejectWithValue }) => {\r\n    try {\r\n      return await contactsApi.addContact(contact);\r\n    } catch (error) {\r\n      return rejectWithValue(error.message);\r\n    }\r\n  }\r\n);\r\n\r\nexport const deleteContact = createAsyncThunk(\r\n  \"contact/deleteContact\",\r\n  async (id, { rejectWithValue }) => {\r\n    try {\r\n      await contactsApi.deleteContact(id);\r\n      return id;\r\n    } catch (error) {\r\n      return rejectWithValue(error.message);\r\n    }\r\n  }\r\n);\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\n// Создание действий\r\nexport  const deleteContact = createAction(\"contacts/deleteContact\");\r\n\r\nexport  const changeFilter = createAction(\"contacts/changeFilter\");\r\n\r\n\r\n","import { createSelector } from \"reselect\";\r\n\r\nexport const getContacts = (state) => state.Phonebook.entities;\r\nexport const getFilter = (state) => state.Phonebook.filter;\r\nexport const getLoading = (state) => state.Phonebook.isLoading;\r\nexport const getError = (state) => state.Phonebook.error;\r\n\r\nexport const getVisibleContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return contacts.filter(({ name }) =>\r\n      name.toLowerCase().includes(normalizedFilter)\r\n    );\r\n  }\r\n);\r\n","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport { combineReducers } from \"redux\";\r\n\r\nimport { fetchContacts, addContact, deleteContact } from \"./phone-operations\";\r\nimport { contactsActions } from \".\";// я так и не понял что єто\r\n\r\nconst entities = createReducer([], {\r\n  [fetchContacts.fulfilled]: (_, state, { payload }) => payload,\r\n  [addContact.fulfilled]: (state, { payload }) => [payload, ...state],\r\n  [deleteContact.fulfilled]: (state, { payload }) =>\r\n    state.filter((contact) => contact.id !== payload),\r\n});\r\n\r\nconst isLoading = createReducer(false, {\r\n  [fetchContacts.pending]: () => true,\r\n  [fetchContacts.fulfilled]: () => false,\r\n  [fetchContacts.rejected]: () => false,\r\n  [deleteContact.fulfilled]: () => false,\r\n  [deleteContact.pending]: () => true,\r\n  [deleteContact.rejected]: () => false,\r\n  [addContact.fulfilled]: () => false,\r\n  [addContact.pending]: () => true,\r\n  [addContact.rejected]: () => false,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [fetchContacts.rejected]: (_state, { payload }) => payload,\r\n  [fetchContacts.pending]: null,\r\n  [addContact.pending]: null,\r\n  [addContact.rejected]: (_state, { payload }) => payload,\r\n  [deleteContact.pending]: null,\r\n  [deleteContact.rejected]: (_state, { payload }) => payload,\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [contactsActions.changeFilter]: (_state, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({ entities, isLoading, error, filter });\r\n","import { configureStore} from \"@reduxjs/toolkit\";\r\nimport contactReducer from \"./Phonebook/phone-reducers\";\r\nimport logger from \"redux-logger\";\r\nimport {\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\n\r\n// const middleware = [\r\n//   ...getDefaultMiddleware({\r\n//     serializableCheck: {\r\n//       ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n//     } \r\n//   }).concat(logger),\r\n// ];\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    Phonebook: contactReducer,\r\n  },\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n\t\tserializableCheck: false,\r\n\t\t ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    }).concat(logger),\r\n});\r\n\r\nexport default store;\r\n","import s from './Container.module.css';\n\nexport default function Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport {contactsOperations} from '../../redux/Phonebook/index'\nimport s from \"./ContactForm.module.css\";\n\n\nexport default function Form() {\n\tconst dispatch = useDispatch();\n\tconst [name, setName] = useState(\"\");\n\tconst [number, setNumber] = useState(\"\");\n  \n\n  const handleInputChange = (e) => {\n    const { name, value=''} = e.target;\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"number\":\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n};\n\n  const resetState = () => {\n\tsetName(\"\");\n\tsetNumber(\"\");\n  };\n\t\n\t\n\t\n\t\n\t\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\t  dispatch(contactsOperations.addContact({ name, number }));\n\t  resetState()\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.contactFormLabel}>\n        Name\n        <input\n          onChange={handleInputChange}\n          value={name}\n          className={s.inputContactForm}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n      <label className={s.contactFormLabel}>\n        Phone\n        <input\n          value={number}\n          className={s.inputContactForm}\n          onChange={handleInputChange}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n      <button className={s.btnContactForm} type=\"submit\">\n        <span className={s.btnText}> Add contacts</span>\n      </button>\n    </form>\n  );\n}\n","import { useSelector, useDispatch } from 'react-redux';\nimport {contactsSelectors, contactsActions} from './../../redux/Phonebook/index'\nimport PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\n\n\nexport default function Filter() {\n  const value = useSelector(contactsSelectors.getFilter);\n\tconst dispatch = useDispatch();\n\t\n\n\n  const onChangeInput = e => {\n    dispatch(contactsActions.changeFilter(e.target.value));\n  };\n  return (\n    <label className={s.textFilter}>\n      Find contacts by name\n      <input\n        className={s.inputFilter}\n        type=\"text\"\n        value={value}\n        onChange={onChangeInput}\n      />\n    </label>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};","import { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  contactsOperations,\r\n  contactsSelectors,\r\n} from \"../../redux/Phonebook/index\";\r\nimport s from \"./ContactList.module.css\";\r\n\r\nexport default function ContactsList() {\r\n  const contacts = useSelector(contactsSelectors.getVisibleContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => dispatch(contactsOperations.fetchContacts()), [dispatch]);\r\n\r\n  return (\r\n    <ul>\r\n      {contacts.map(({ name, number, id }) => (\r\n        <li className={s.item} key={id}>\r\n          {name}:{number}\r\n          <button\r\n            className={s.button}\r\n            type=\"button\"\r\n            onClick={() => dispatch(contactsOperations.deleteContact(id))}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n","import Container from \"../container/Container\";\nimport Form from \"../ContactForm\";\nimport Filter from \"../Filter\";\nimport ContactList from \"../ContactsList\";\nimport s from \"./App.module.css\";\n\nfunction App() {\n  return (\n    <Container>\n      <h1 className={s.titlePhone}>Phonebook</h1>\n      <Form />\n      <Filter />\n      <h2 className={s.contactTitle}>Contacts</h2>\n      <ContactList />\n    </Container>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3buad\",\"btnContactForm\":\"ContactForm_btnContactForm__2b3hZ\",\"inputContactForm\":\"ContactForm_inputContactForm__1yOsh\",\"contactFormLabel\":\"ContactForm_contactFormLabel__3PEKS\"};"],"sourceRoot":""}