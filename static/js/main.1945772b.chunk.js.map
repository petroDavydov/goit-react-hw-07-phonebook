{"version":3,"sources":["components/Filter/Filter.module.css","components/Contact/Contact.module.css","components/ContactsList/ContactList.module.css","components/App/App.module.css","components/container/Container.module.css","redux/Phonebook/phone-actions.js","redux/Phonebook/phone-reducer.js","redux/store.js","components/container/Container.jsx","redux/Phonebook/phone-selectors.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/Contact/Contact.jsx","components/ContactsList/ContactList.jsx","components/App/App.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","actions","addContact","createAction","payload","name","number","id","uuidv4","deleteContact","changeFilter","contactItems","createReducer","initialContacts","state","filter","_","combineReducers","contactsPersistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","logger","store","configureStore","reducer","contacts","persistReducer","contactReducer","devTools","process","persistor","persistStore","Container","children","className","s","container","getContacts","getFilter","getFiltredContacts","lowerCasedFilter","toLowerCase","includes","Form","useState","setName","setNumber","useSelector","dispatch","useDispatch","handleInputChange","e","target","value","reset","form","onSubmit","preventDefault","some","element","alert","contactFormLabel","onChange","inputContactForm","type","pattern","title","required","btnContactForm","btnText","Filter","textFilter","inputFilter","currentTarget","Contact","propType","PropTypes","string","isRequired","ContactsList","map","item","button","onClick","App","titlePhone","contactTitle","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.1945772b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"textFilter\":\"Filter_textFilter__36LwR\",\"inputFilter\":\"Filter_inputFilter__3_EeN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"Contact_name__HvGGO\",\"number\":\"Contact_number__3k5gQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactList_item__1MOFM\",\"buttonDelete\":\"ContactList_buttonDelete__1lF3R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"titlePhone\":\"App_titlePhone__2TmHM\",\"contactTitle\":\"App_contactTitle__2bMdn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3vc7M\"};","import { v4 as uuidv4 } from \"uuid\";\r\n\r\nimport { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst addContact = createAction(\"contacts/Add\", ({ name, number }) => ({\r\n  payload: {\r\n    name,\r\n    number,\r\n    id: uuidv4(),\r\n  },\r\n}));\r\n\r\nconst deleteContact = createAction(\"contacts/Delete\");\r\n\r\nconst changeFilter = createAction(\"contacts/changeFilter\");\r\n\r\nconst actions = { addContact, deleteContact, changeFilter };\r\n\r\nexport default actions;\r\n","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport { combineReducers } from \"redux\";\r\nimport actions from \"./phone-actions\";\r\nimport initialContacts from \"../../json/contact.json\";\r\n\r\nconst contactItems = createReducer(initialContacts, {\r\n  [actions.addContact]: (state, { payload }) => [...state, payload],\r\n  [actions.deleteContact]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [actions.changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({ contactItems, filter });\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport contactReducer from \"./Phonebook/phone-reducer\";\r\nimport logger from \"redux-logger\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nconst contactsPersistConfig = {\r\n  key: \"contacts\",\r\n  storage,\r\n  blacklist: [\"filter\"], //не допускать в локалсторедж\r\n  // whitelist: ['filter'], --допускать в локалторедж\r\n};\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }).concat(logger),\r\n];\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(contactsPersistConfig, contactReducer),\r\n  },\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n  middleware,\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","import s from './Container.module.css';\n\nexport default function Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}","export const getContacts = state => state.contacts.contactItems;\r\nexport const getFilter = state => state.contacts.filter;\r\nexport const getFiltredContacts = state => {\r\n  const lowerCasedFilter = getFilter(state).toLowerCase();\r\n  const filteredContacts = getContacts(state).filter(({ name }) =>\r\n    name.toLowerCase().includes(lowerCasedFilter),\r\n  );\r\n  return filteredContacts;\r\n};","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getContacts } from \"../../redux/Phonebook/phone-selectors\";\nimport actions from \"../../redux/Phonebook/phone-actions\";\nimport s from \"./ContactForm.module.css\";\n\nexport default function Form() {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"number\":\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const comparableElement = contacts.some(\n      (element) => element.name.toLowerCase() === name.toLowerCase()\n    );\n    if (comparableElement) {\n      reset();\n      return alert(`${name} is already in the directory`);\n    }\n    dispatch(actions.addContact({ name, number }));\n    reset();\n  };\n\n  const reset = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.contactFormLabel}>\n        Name\n        <input\n          onChange={handleInputChange}\n          value={name}\n          className={s.inputContactForm}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n      <label className={s.contactFormLabel}>\n        Phone\n        <input\n          value={number}\n          className={s.inputContactForm}\n          onChange={handleInputChange}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n      <button className={s.btnContactForm} type=\"submit\">\n        <span className={s.btnText}> Add contacts</span>\n      </button>\n    </form>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { getFilter } from '../../redux/Phonebook/phone-selectors';\nimport actions from '../../redux/Phonebook/phone-actions';\nimport s from './Filter.module.css';\n\nexport default function Filter() {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n  const onChangeInput = e => {\n    dispatch(actions.changeFilter(e.currentTarget.value));\n  };\n  return (\n    <label className={s.textFilter}>\n      Find contacts by name\n      <input\n        className={s.inputFilter}\n        type=\"text\"\n        value={filter}\n        onChange={onChangeInput}\n      />\n    </label>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};","import PropTypes from 'prop-types';\nimport s from './Contact.module.css';\nexport default function Contact({ name, number }) {\n  return (\n    <>\n      <span className={s.name}>{name}:</span>\n      <span className={s.number}>{number}</span>\n    </>\n  );\n}\nContact.propType = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.number.isRequired,\n};","import Contact from \"../Contact/Contact\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getFiltredContacts } from \"../../redux/Phonebook/phone-selectors\";\r\nimport actions from \"../../redux/Phonebook/phone-actions\";\r\nimport s from \"./ContactList.module.css\";\r\n\r\nexport default function ContactsList() {\r\n  const contacts = useSelector(getFiltredContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <ul>\r\n      {contacts.map(({ name, number, id }) => (\r\n        <li className={s.item} key={id}>\r\n          <Contact name={name} number={number} />\r\n          <button\r\n            className={s.button}\r\n            type=\"button\"\r\n            onClick={() => dispatch(actions.deleteContact(id))}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n","import Container from \"../container/Container\";\nimport Form from \"../ContactForm\";\nimport Filter from \"../Filter\";\nimport ContactList from \"../ContactsList\";\nimport s from \"./App.module.css\";\n\nfunction App() {\n  return (\n    <Container>\n      <h1 className={s.titlePhone}>Phonebook</h1>\n      <Form />\n      <Filter />\n      <h2 className={s.contactTitle}>Contacts</h2>\n      <ContactList />\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nimport { store, persistor } from './redux/store';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './components/App';\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={<h2>Wait,loading</h2>} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3buad\",\"btnContactForm\":\"ContactForm_btnContactForm__2b3hZ\",\"inputContactForm\":\"ContactForm_inputContactForm__1yOsh\",\"contactFormLabel\":\"ContactForm_contactFormLabel__3PEKS\"};"],"sourceRoot":""}